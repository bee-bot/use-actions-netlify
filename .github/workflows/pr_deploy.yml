name: Preview forked PR
on:
  workflow_dispatch:
    inputs:
      pull_request:
        description: 'Pull request number'
        required: true
jobs:
  preview:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          # 0 indicates all history
          fetch-depth: 0
      - name: Merge without push
        id: merge
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const {execSync} = require('child_process');
            function echoExecSync(cmd) { console.log(cmd); execSync(cmd) }
            const r = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.inputs.pull_request }}
            });
            echoExecSync(`git config user.email "github-actions[bot]@users.noreply.github.com"`);
            echoExecSync(`git config user.name "github-actions[bot]"`);
            const baseRef = r.data.base.ref;
            echoExecSync(`git checkout ${baseRef}`);
            echoExecSync(`git checkout -b preview ${baseRef}`);
            echoExecSync(`git pull https://github.com/${r.data.head.repo.full_name}.git ${r.data.head.ref}`);
            core.setOutput('sha', r.data.head.sha);
      # Build
      - name: Deploy to Netlify
        id: netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './public'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: false
          enable-commit-status: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
      - name: Create commit status
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              context: 'Netlify',
              description: 'preview',
              state: 'success',
              sha: "${{ steps.merge.outputs.sha }}",
              target_url: "${{ steps.netlify.outputs.deploy-url }}"
            })
